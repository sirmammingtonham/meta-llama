[{"inputs": "Given a list of integers, find the maximum sum of any contiguous subarray.\n\nList: [1, -2, 3, 4, -5, 8]\nMaximum sum:", "targets": ["10"], "multiple_choice_targets": ["-2", "3", "10", "12", "15"]}, {"inputs": "Given a list of integers, determine whether there exists a subsequence that sums to zero.\n\nList: [1, -2, 3, 4, -5, 8]\nExists/Does not exist?", "targets": ["Exists"], "multiple_choice_targets": ["Exists", "Does not exist"]}, {"inputs": "Given a list of integers, determine whether there exists a subsequence that sums to a given target.\n\nList: [1, -2, 3, 4, -5, 8]\nTarget: 7\nExists/Does not exist?", "targets": ["Exists"], "multiple_choice_targets": ["Exists", "Does not exist"]}, {"inputs": "Given a list of integers, find the length of the longest increasing subsequence.\n\nList: [10, 22, 9, 33, 21, 50, 41, 60, 80]\nLength of longest increasing subsequence:", "targets": ["6"], "multiple_choice_targets": ["2", "3", "4", "5", "6", "7", "8"]}, {"inputs": "Given a list of integers, find the length of the longest non-decreasing subsequence.\n\nList: [10, 22, 9, 33, 21, 50, 41, 60, 80]\nLength of longest non-decreasing subsequence:", "targets": ["7"], "multiple_choice_targets": ["2", "3", "4", "5", "6", "7", "8"]}, {"inputs": "Given a list of integers, find the length of the longest bitonic subsequence.\n\nList: [1, 11, 2, 10, 4, 5, 2, 1]\nLength of longest bitonic subsequence:", "targets": ["6"], "multiple_choice_targets": ["2", "3", "4", "5", "6", "7", "8"]}, {"inputs": "Given a string, determine whether it is a palindrome.\n\nString: \"racecar\"\nPalindrome/Not Palindrome?", "targets": ["Palindrome"], "multiple_choice_targets": ["Palindrome", "Not Palindrome"]}, {"inputs": "Given a list of integers, find the maximum sum subarray.\n\nList: [-2,1,-3,4,-1,2,1,-5,4]\nMaximum sum subarray:", "targets": ["6"], "multiple_choice_targets": ["-2", "1", "-3", "4", "-1", "2", "1", "-5", "4", "6", "7"]}, {"inputs": "Given a list of integers, find the minimum number of jumps to reach the end.\n\nList: [2,3,1,1,4]\nMinimum number of jumps:", "targets": ["2"], "multiple_choice_targets": ["1", "2", "3", "4", "5"]}, {"inputs": "Given a list of integers, find the maximum product subarray.\n\nList: [2,3,-2,4]\nMaximum product subarray:", "targets": ["6"], "multiple_choice_targets": ["-2", "2", "3", "4", "6", "8", "12"]}, {"inputs": "Given a list of integers, find the longest contiguous increasing subarray.\n\nList: [1, 2, 3, 2, 5, 6, 7, 8, 9, 10]\nLongest contiguous increasing subarray:", "targets": ["5"], "multiple_choice_targets": ["2", "3", "4", "5", "6", "7", "8", "9"]}, {"inputs": "Given a list of integers, find the longest contiguous subarray with equal number of 0s and 1s.\n\nList: [0, 1, 0, 1, 1, 1, 0, 0]\nLongest contiguous subarray with equal number of 0s and 1s:", "targets": ["6"], "multiple_choice_targets": ["2", "3", "4", "5", "6", "7", "8"]}, {"inputs": "Given a list of integers, find the maximum sum of any contiguous subarray.\n\nList: [-2, 1, -3, 4, -1, 2, 1, -5, 4]\nMaximum sum:", "targets": ["6"], "multiple_choice_targets": ["-2", "1", "-3", "4", "-1", "2", "1", "-5", "4", "6", "7", "8", "9", "10", "11", "12", "13"]}, {"inputs": "Given two strings, determine whether they are anagrams.\n\nStrings: listen silent\nAnagram/Not Anagram?", "targets": ["Anagram"], "multiple_choice_targets": ["Anagram", "Not Anagram"]}, {"inputs": "Given a list of integers, find the maximum product of any contiguous subarray.\n\nList: [-2, 3, -4]\nMaximum product:", "targets": ["24"], "multiple_choice_targets": ["-2", "3", "-4", "6", "12", "24"]}, {"inputs": "Given a list of integers, find the length of the longest common subsequence.\n\nList 1: [1, 2, 3, 4, 1]\nList 2: [3, 4, 1, 2, 1, 3]\nLength of longest common subsequence:", "targets": ["3"], "multiple_choice_targets": ["0", "1", "2", "3", "4", "5"]}, {"inputs": "Given a list of integers, find the second largest number.\n\nList: [5, 2, 8, 12, 3]\nSecond largest number:", "targets": ["8"], "multiple_choice_targets": ["2", "3", "5", "8", "12"]}, {"inputs": "Given a list of integers, find the sum of all even numbers.\n\nList: [1, 2, 3, 4, 5, 6, 7, 8, 9]\nSum of even numbers:", "targets": ["20"], "multiple_choice_targets": ["6", "10", "14", "18", "20", "24", "28"]}, {"inputs": "Given a list of integers, remove all duplicates and return the new list.\n\nList: [1, 2, 3, 2, 4, 5, 3]\nNew list:", "targets": ["[1, 2, 3, 4, 5]"], "multiple_choice_targets": ["[1, 2, 3]", "[1, 2, 3, 4]", "[1, 2, 3, 4, 5]", "[1, 2, 3, 5]"]}, {"inputs": "Given a list of integers, find the median value.\n\nList: [5, 2, 8, 12, 3]\nMedian value:", "targets": ["5"], "multiple_choice_targets": ["2", "3", "5", "8", "12"]}, {"inputs": "Given a list of integers, find the sum of all numbers.\n\nList: [1, 2, 3, 4, 5]\nSum of all numbers:", "targets": ["15"], "multiple_choice_targets": ["5", "10", "15", "20", "25"]}, {"inputs": "Given a list of integers, find the sum of all even numbers.\n\nList: [3, 7, 2, 8, 5, 9, 12]\nSum of even numbers:", "targets": ["22"], "multiple_choice_targets": ["2", "8", "10", "20", "22", "24"]}, {"inputs": "Given a string, reverse the order of the words.\n\nString: \"The quick brown fox jumps over the lazy dog.\"\nReversed string:", "targets": ["dog. lazy the over jumps fox brown quick The"], "multiple_choice_targets": ["The quick brown fox jumps over the lazy dog.", "dog. lazy the over jumps fox brown quick The", "The dog. lazy over jumps fox brown quick"]}, {"inputs": "Given a list of integers, find the largest difference between any two elements.\n\nList: [4, 1, 9, 5, 6, 8, 3]\nLargest difference:", "targets": ["8"], "multiple_choice_targets": ["1", "2", "3", "4", "5", "6", "7", "8"]}, {"inputs": "Given a string, determine whether it is a palindrome.\n\nString: \"racecar\"\nPalindrome?", "targets": ["Yes"], "multiple_choice_targets": ["Yes", "No"]}, {"inputs": "Given a list of integers, remove all duplicates and return the new list.\n\nList: [1, 2, 3, 2, 4, 5, 3, 6]\nNew list:", "targets": ["[1, 2, 3, 4, 5, 6]"], "multiple_choice_targets": ["[1, 2, 3, 4, 5, 6]", "[1, 2, 3, 2, 4, 5, 3, 6]", "[1, 3, 2, 4, 5, 6]"]}, {"inputs": "Given a list of integers, find the second largest value.\n\nList: [5, 2, 8, 12, 3]\nSecond largest value:", "targets": ["8"], "multiple_choice_targets": ["2", "3", "5", "8", "12"]}, {"inputs": "Given a string, reverse the order of words.\n\nString: \"The quick brown fox\"\nReversed String: ", "targets": ["fox brown quick The"], "multiple_choice_targets": ["The quick brown fox", "fox brown quick The", "brown fox quick The", "quick brown fox The"]}, {"inputs": "Given a list of integers, find the maximum difference between any two elements.\n\nList: [3, 7, 2, 8, 5, 9, 12]\nMaximum difference:", "targets": ["10"], "multiple_choice_targets": ["1", "3", "5", "7", "9", "10", "12"]}, {"inputs": "Given a string, determine whether it is a palindrome.\n\nString: \"racecar\"\nPalindrome/Not Palindrome?", "targets": ["Palindrome"], "multiple_choice_targets": ["Palindrome", "Not Palindrome"]}, {"inputs": "Given a list of integers, find the second largest element.\n\nList: [3, 7, 2, 8, 5, 9, 12]\nSecond largest element:", "targets": ["9"], "multiple_choice_targets": ["2", "5", "7", "8", "9", "12"]}, {"inputs": "Given a string, remove all vowels.\n\nString: \"Hello World\"\nString without vowels: ", "targets": ["Hll Wrld"], "multiple_choice_targets": ["Hello World", "Hlo Wold", "Hll Wrld", "Hllo Wrld"]}, {"inputs": "Given a list of integers, find the sum of all odd numbers.\n\nList: [3, 7, 2, 8, 5, 9, 12]\nSum of odd numbers:", "targets": ["24"], "multiple_choice_targets": ["3", "5", "7", "9", "11", "15", "24"]}, {"inputs": "Given a string, reverse the order of words.\n\nString: \"Hello world\"\nReversed string: ", "targets": ["world Hello"], "multiple_choice_targets": ["Hello world", "dlrow olleH", "worldHello", "Hello, world"]}, {"inputs": "Given a list of integers, find the second largest number.\n\nList: [1, 2, 3, 4, 5, 6, 7, 8, 9]\nSecond largest number:", "targets": ["8"], "multiple_choice_targets": ["2", "4", "6", "8", "10"]}, {"inputs": "Given a string, determine whether it is a palindrome.\n\nString: \"racecar\"\nPalindrome/Not Palindrome?", "targets": ["Palindrome"], "multiple_choice_targets": ["Palindrome", "Not Palindrome"]}, {"inputs": "Given a list of integers, remove all duplicates and return the new list.\n\nList: [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3]\nNew list:", "targets": ["[1, 2, 3, 4, 5, 6, 7, 8, 9]"], "multiple_choice_targets": ["[1, 2, 3]", "[1, 2, 3, 4, 5, 6, 7, 8, 9]", "[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3]"]}, {"inputs": "Given a list of integers, find the product of all numbers except the current one.\n\nList: [1, 2, 3, 4]\nProduct list: [24, 12, 8, 6]", "targets": ["[24, 12, 8, 6]"], "multiple_choice_targets": ["[1, 2, 3, 4]", "[2, 3, 4]", "[6, 8, 12, 24]", "[24, 12, 6, 1]"]}, {"inputs": "Given a string, remove all vowels and return the new string.\n\nString: \"Hello world\"\nNew string:", "targets": ["Hll wrld"], "multiple_choice_targets": ["Hello world", "Hll wrld", "Hllo wrld", "Hll wold"]}, {"inputs": "Given a list of integers, find the maximum sum of any contiguous subarray.\n\nList: [-2, 1, -3, 4, -1, 2, 1, -5, 4]\nMaximum sum:", "targets": ["6"], "multiple_choice_targets": ["-2", "1", "-3", "4", "-1", "2", "1", "-5", "4", "6", "7", "8", "9"]}, {"inputs": "Given a binary tree, determine if it is a valid binary search tree.\n\nTree:\n    5\n   / \\\n  1   4\n     / \\\n    3   6\nValid/Invalid?", "targets": ["Invalid"], "multiple_choice_targets": ["Valid", "Invalid"]}, {"inputs": "Given a list of integers, sort them in ascending order using the bubble sort algorithm.\n\nList: [64, 34, 25, 12, 22, 11, 90]\nSorted list:", "targets": ["[11, 12, 22, 25, 34, 64, 90]"], "multiple_choice_targets": ["[11, 12, 22, 25, 34, 64, 90]", "[90, 64, 34, 25, 22, 12, 11]", "[11, 22, 25, 34, 64, 90]", "[90, 34, 25, 22, 12, 11, 64]"]}, {"inputs": "Given a string, determine whether it contains only unique characters.\n\nString: \"abcdefg\"\nUnique/Not Unique?", "targets": ["Unique"], "multiple_choice_targets": ["Unique", "Not Unique"]}, {"inputs": "Given a list of integers, find the second largest number.\n\nList: [1, 2, 3, 4, 5, 6, 7, 8, 9]\nSecond largest number:", "targets": ["8"], "multiple_choice_targets": ["1", "2", "3", "4", "5", "6", "7", "8", "9"]}, {"inputs": "Given a string, determine whether it is a valid IPv4 address.\n\nString: \"192.168.0.1\"\nValid/Invalid?", "targets": ["Valid"], "multiple_choice_targets": ["Valid", "Invalid"]}, {"inputs": "Given a list of strings, sort them in alphabetical order.\n\nList: [\"apple\", \"banana\", \"cherry\", \"date\"]\nSorted list:", "targets": ["[\"apple\", \"banana\", \"cherry\", \"date\"]"], "multiple_choice_targets": ["[\"date\", \"cherry\", \"banana\", \"apple\"]", "[\"banana\", \"apple\", \"date\", \"cherry\"]", "[\"cherry\", \"banana\", \"date\", \"apple\"]"]}, {"inputs": "Given a string, determine whether it is a palindrome.\n\nString: \"racecar\"\nPalindrome/Not Palindrome?", "targets": ["Palindrome"], "multiple_choice_targets": ["Palindrome", "Not Palindrome"]}, {"inputs": "Given a list of integers, find the maximum value.\n\nList: [3, 7, 2, 8, 5, 9, 12]\nMaximum value:", "targets": ["12"], "multiple_choice_targets": ["3", "5", "7", "8", "9", "12"]}, {"inputs": "Given a list of integers, find the average value.\n\nList: [3, 7, 2, 8, 5, 9, 12]\nAverage value:", "targets": ["6.428571428571429"], "multiple_choice_targets": ["4", "5", "6", "7", "8", "9", "10"]}, {"inputs": "Given a list of integers, remove all duplicates.\n\nList: [3, 7, 2, 8, 5, 9, 12, 3, 5, 8]\nList with duplicates removed:", "targets": ["[3, 7, 2, 8, 5, 9, 12]"], "multiple_choice_targets": ["[3, 7, 2, 8, 5, 9, 12, 5, 8]", "[2, 3, 5, 7, 8, 9, 12]"]}, {"inputs": "Given a list of integers, find the product of all even numbers.\n\nList: [3, 7, 2, 8, 5, 9, 12]\nProduct of even numbers:", "targets": ["96"], "multiple_choice_targets": ["2", "8", "12", "16", "24", "96"]}]